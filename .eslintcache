[{"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\reportWebVitals.js":"1","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\App.js":"2","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\index.js":"3","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Login.jsx":"4","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Home.jsx":"5","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Layout.jsx":"6","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Navbar.jsx":"7","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\TopicElement.jsx":"8","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\UserTopics.jsx":"9","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\database\\firebase.js":"10","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Topic.jsx":"11","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\SearchBar.jsx":"12","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\ImageDropzone.jsx":"13","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\resources\\strings.js":"14","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\ReportPage.jsx":"15","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Reports.jsx":"16","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\store\\store.js":"17"},{"size":362,"mtime":1612095212246,"results":"18","hashOfConfig":"19"},{"size":1593,"mtime":1614873102237,"results":"20","hashOfConfig":"19"},{"size":546,"mtime":1612116813291,"results":"21","hashOfConfig":"19"},{"size":1336,"mtime":1614854014923,"results":"22","hashOfConfig":"19"},{"size":265,"mtime":1612783622962,"results":"23","hashOfConfig":"19"},{"size":386,"mtime":1612114022679,"results":"24","hashOfConfig":"19"},{"size":4252,"mtime":1615217000815,"results":"25","hashOfConfig":"19"},{"size":3196,"mtime":1615217185684,"results":"26","hashOfConfig":"19"},{"size":5521,"mtime":1615220394302,"results":"27","hashOfConfig":"19"},{"size":678,"mtime":1612355262595,"results":"28","hashOfConfig":"19"},{"size":5915,"mtime":1615185986483,"results":"29","hashOfConfig":"19"},{"size":562,"mtime":1614177403657,"results":"30","hashOfConfig":"19"},{"size":5735,"mtime":1614862491940,"results":"31","hashOfConfig":"19"},{"size":5094,"mtime":1615215934761,"results":"32","hashOfConfig":"19"},{"size":7667,"mtime":1615215825648,"results":"33","hashOfConfig":"19"},{"size":2111,"mtime":1615213874198,"results":"34","hashOfConfig":"19"},{"size":361,"mtime":1615220201402,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"16ts6m3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\reportWebVitals.js",[],["75","76"],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\App.js",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\index.js",[],["77","78"],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Login.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Home.jsx",[],["79","80"],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Layout.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Navbar.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\TopicElement.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\UserTopics.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\database\\firebase.js",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Topic.jsx",["81","82","83","84","85","86"],"import React, {useEffect, useState} from \"react\";\r\nimport {db} from \"../database/firebase\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\nimport Reports from \"./Reports\";\r\nimport CancelIcon from \"../assets/images/cancel.svg\";\r\nimport DeleteIcon from \"../assets/images/trash.svg\";\r\nimport \"../assets/css/Topic.css\";\r\nimport stringRes from \"../resources/strings\";\r\n\r\nfunction Topic(props) {\r\n\r\n    let language = process.env.REACT_APP_LANGUAGE;\r\n    let strings = stringRes[language];\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    // for displaying the modal\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [topicExists, setTopicExists] = useState(true);\r\n    const [topicPage, setTopicPage] = useState(0);\r\n\r\n    const [userGoogleId, setUserGoogleId] = useState(null);\r\n    const [topicId, setTopicId] = useState(null);\r\n\r\n    const [topic, setTopic] = useState({});\r\n    const [topicReports, setTopicReports] = useState([]);\r\n\r\n    // fetching the details of a topic before rendering\r\n    useEffect(() => {\r\n\r\n        // getting the url parameters        \r\n        const userid = params.userId;\r\n        const topicid = params.topicId;\r\n        \r\n        if(userid !== undefined && topicid !== undefined) {\r\n            setUserGoogleId(userid);\r\n            setTopicId(topicid);\r\n            getTopicDetails(userid, topicid);\r\n        }\r\n        else {\r\n            history.push(\"/\");\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [params]);\r\n\r\n\r\n    useEffect(() => {\r\n        const page = new URLSearchParams(history.location.search).get(\"page\");\r\n        setTopicPage(page);        \r\n        // eslint-disable-next-line\r\n    }, [history.location.search]);\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n     \r\n    function closeModal(){\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const getTopicDetails = (userGoogleId, topicId) => {\r\n        db.ref(`topics/${userGoogleId}/${topicId}`).on(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                props.setTopicName(snapshot.val().topicName);\r\n                setTopic(snapshot.val());\r\n                getTopicReports(topicId);\r\n                setIsLoading(false);    \r\n            }\r\n            else {\r\n                setTopicExists(false);\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const getTopicReports = (topicId) => {\r\n        db.ref(`reports/${topicId}`).on(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                setTopicReports(Object.values(snapshot.val()));\r\n            }\r\n            else\r\n            {\r\n                setTopicReports([]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // deleting one topic from db, then going back to homepage\r\n    const deleteTopic = () => {\r\n        db.ref(`topics/${userGoogleId}/${topicId}`).remove().then(() => history.push(\"/\"));\r\n    }\r\n\r\n    const DeleteTopicModal = () => {\r\n        return(\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                className=\"delete-topic__modal\"\r\n            >\r\n                <img \r\n                    src={CancelIcon} \r\n                    alt=\"cancel\"\r\n                    className=\"modal__cancel-icon\"\r\n                    onClick={closeModal}\r\n                />\r\n                <div className=\"delete-topic__title\">{strings.topic.deleteModal.title}</div>\r\n                <div className=\"delete-topic__button-holder\">\r\n                    <button className=\"delete-topic__button\" onClick={deleteTopic}>{strings.topic.deleteModal.deleteButtonText}</button>\r\n                    <button  className=\"delete-topic__button\" onClick={closeModal}>{strings.topic.deleteModal.cancelButtonText}</button>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const ReportsTable = () => {\r\n        if(topicPage == 0 && topicReports.length > 0) {\r\n            return(\r\n                <Reports reports={topicReports} />\r\n            );\r\n        }\r\n        if(topicPage == 0 && topicReports.length == 0) {\r\n            return(\r\n                <h1 className=\"topic__no-reports\">{strings.topic.noReports}</h1>\r\n            );\r\n        }\r\n        if(topicPage == 1) {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DeleteTopicButton = () => {\r\n        <button \r\n            type=\"submit\" \r\n            className=\"delete-topic__button\"\r\n            onClick={openModal}\r\n        >\r\n        <img className=\"trash-icon\" alt=\"trash-icon\" src={DeleteIcon} />\r\n            {strings.topic.deleteButtonText}\r\n        </button>\r\n    }\r\n\r\n    if(topicExists) {\r\n        return (\r\n            <div className=\"topic-detail\">\r\n                <DeleteTopicModal />\r\n                {topicPage == 0 && (\r\n                    <div>\r\n                        <ul>\r\n                            <li>\r\n                                {strings.topic.reports.reportUrl}: \r\n                                <a \r\n                                    href={topic.reportUrl} \r\n                                    target=\"blank\"\r\n                                    className=\"topic-detail__reportUrl\"\r\n                                >\r\n                                    {topic.reportUrl}\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>)}\r\n                {!isLoading && <ReportsTable />}\r\n                {isLoading && <div className=\"topic-loader\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"topic-detail\">\r\n                <h1 className=\"topic-detail__notexists\">{strings.topic.notExistsText}</h1>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Topic;","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\SearchBar.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\ImageDropzone.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\resources\\strings.js",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\ReportPage.jsx",["87"],"import React, {useState, useEffect} from 'react';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ImageDropzone from \"./ImageDropzone\";\r\nimport {db, storage} from \"../database/firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport stringRes from \"../resources/strings\";\r\nimport \"../assets/css/ReportPage.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction ReportPage() {\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const recaptchaRef = React.useRef();\r\n    \r\n    let language = process.env.REACT_APP_LANGUAGE;\r\n    let strings = stringRes[language];\r\n\r\n    const [files, setFiles] = useState([]); // for storing image(s) uploaded by user\r\n\r\n    const [reportText, setReportText] = useState(\"\"); // text reported by user\r\n\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const sourceCode = strings.report.sourceCode;\r\n\r\n    const [userId, setUserId] = useState(null);\r\n    const [topicId, setTopicId] = useState(null);\r\n    const [topic, setTopic] = useState({});\r\n\r\n    useEffect(() => {\r\n        \r\n        const userid = params.userId;\r\n        const topicid = params.topicId;\r\n       \r\n        if(userid !== null && topicid !== null) {\r\n           setUserId(userid);\r\n           setTopicId(topicid);\r\n           getTopicDetails(userid, topicid);\r\n        }\r\n        else {\r\n            history.push(\"/\");\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const getTopicDetails = (userGoogleId, topicId) => {\r\n        db.ref(`topics/${userGoogleId}/${topicId}`).on(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                setTopic(snapshot.val());\r\n            }\r\n        });\r\n    }\r\n\r\n    const notifySuccess = (message) => toast.success(message);\r\n    const notifyError = (message) => toast.error(message);\r\n\r\n    const handleTextChange = (e) => {\r\n        setReportText(e.target.value);\r\n    }\r\n\r\n    const onCaptchaChange = (token) => {\r\n      \r\n    }\r\n\r\n    // resets state values and reCaptcha\r\n    const resetPage = () => {\r\n        setReportText(\"\");\r\n        setFiles([]);\r\n        recaptchaRef.current.props.grecaptcha.reset();\r\n    }\r\n\r\n    // uploads image to firebase storage\r\n    // on success return the image's download URL\r\n    // on error throws error\r\n    const uploadFromBlobAsync = async ({blobUrl, name}) => {\r\n        if (!blobUrl || !name) return null;\r\n        try {\r\n            const blob = await fetch(blobUrl).then((r) => r.blob());\r\n            const snapshot = await storage.ref(\"report_images\").child(name).put(blob);\r\n            return await snapshot.ref.getDownloadURL();\r\n        } catch (error) {\r\n            notifyError(error);\r\n        }\r\n    }\r\n\r\n    // uploads the reported text to firestore\r\n    // if it's provided, uploads the given image's download URL, otherwise null\r\n    const uploadReport = async (url) => {\r\n        const dbRef = db.ref(`reports/${topicId}`);\r\n        const uid = dbRef.push().key; // getting a new id for the topic\r\n        const date = `${Date.now()}`;\r\n\r\n        dbRef.child(uid).set({\r\n            date : date,\r\n            text: reportText,\r\n            imageUrl: url,\r\n            topicOwnerId: userId\r\n        }).catch((error) => notifyError(error));\r\n\r\n    }\r\n\r\n    // if the user provided an image, upload it to firebase storage, then upload the report\r\n    const uploadToFirebase = () => {\r\n        if(files.length) {\r\n            try {\r\n                const url = uploadFromBlobAsync({\r\n                    blobUrl: URL.createObjectURL(files[0]),\r\n                    name: files[0].name\r\n                })\r\n                url.then((downloadURL) => {\r\n                    uploadReport(downloadURL);\r\n                });\r\n                return\r\n            }\r\n            catch (e) {\r\n                setIsUploading(false)\r\n                notifyError(e.message)\r\n                return\r\n            }\r\n        }\r\n        else {\r\n            uploadReport(null);\r\n        }\r\n    }\r\n\r\n\r\n    // when the user presses the submit button\r\n    const onSubmitWithReCAPTCHA = async () => {\r\n        const token = await recaptchaRef.current.props.grecaptcha.getResponse();\r\n        // if the reCaptcha's token is empty string or null, means that the user did not solve the captcha\r\n        \r\n        if(token === \"\" || token === null) {\r\n            notifyError(strings.report.errorText.notRobot);\r\n            return;\r\n        }\r\n\r\n        // if the given text for report is too short\r\n        if(reportText.length < 20) {\r\n            notifyError(strings.report.errorText.shortReport);\r\n            return;\r\n        }\r\n        setIsUploading(true); // setting up loader\r\n        uploadToFirebase(); // try to upload the image and report\r\n        setIsUploading(false);\r\n\r\n        // providing success message for 2 secs\r\n        notifySuccess(strings.report.errorText.successfulReport);\r\n        \r\n        resetPage();\r\n    }\r\n\r\n    return (\r\n        <div className=\"report-container\">\r\n            <div className=\"report-container__content\">\r\n                <div className=\"report-text\">\r\n                    <div className=\"info\">\r\n                        <div className=\"info-text\">\r\n                            {strings.report.title}\r\n                            <span className=\"info-text__topic-name\">  {topic.topicName}</span>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <textarea \r\n                        className=\"text-input\" \r\n                        value = {reportText}\r\n                        placeholder={strings.report.inputPlaceHolder} \r\n                        onChange={handleTextChange}\r\n                    />\r\n                    <div className=\"source-code\">\r\n                            {`${strings.report.sourceCodeText}: `}\r\n                            <a \r\n                                target=\"blank\" \r\n                                href={`${sourceCode}`} \r\n                                className=\"source-code__link\"\r\n                            >\r\n                                {strings.report.sourceCodeShort}\r\n                            </a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"report-image\">\r\n                    <div className=\"info\">\r\n                        <div className=\"info-text\">\r\n                            {strings.report.attachImageText}\r\n                        </div>\r\n                    </div>\r\n                    <ImageDropzone setUploadedImages={setFiles} files={files} />\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom-submit__container\">\r\n                <div className=\"submit-container\">\r\n                    <ReCAPTCHA \r\n                        className=\"recaptcha\"\r\n                        ref = {recaptchaRef}\r\n                        sitekey = {process.env.REACT_APP_RECAPTCHA_SITE_KEY}\r\n                        onChange = {onCaptchaChange}\r\n                    />\r\n                    <button className=\"submit-button\" type=\"submit\" onClick={onSubmitWithReCAPTCHA} >{strings.report.submitButtonText}</button>\r\n                    {/*  */}\r\n                    {isUploading && (<div className=\"loader\"></div>)}\r\n                </div>\r\n            </div>\r\n            <ToastContainer \r\n                position=\"bottom-right\"\r\n                pauseOnHover={false}\r\n                hideProgressBar={true}\r\n                autoClose={3000}\r\n                closeOnClick={false}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReportPage;","E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\components\\Reports.jsx",[],"E:\\Egyetem\\V\\Államvizsga\\feedback\\src\\store\\store.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"88","replacedBy":"94"},{"ruleId":"90","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":120,"column":22,"nodeType":"98","messageId":"99","endLine":120,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":125,"column":22,"nodeType":"98","messageId":"99","endLine":125,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":125,"column":50,"nodeType":"98","messageId":"99","endLine":125,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":130,"column":22,"nodeType":"98","messageId":"99","endLine":130,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":137,"column":11,"nodeType":"102","messageId":"103","endLine":137,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":152,"column":28,"nodeType":"98","messageId":"99","endLine":152,"endColumn":30},{"ruleId":"100","severity":1,"message":"104","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":16},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],["105"],["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'DeleteTopicButton' is assigned a value but never used.","Identifier","unusedVar","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]